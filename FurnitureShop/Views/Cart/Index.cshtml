@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Cart Page";
    var cart = ViewData["CartItems"] as List<CartItem> ?? new List<CartItem>();
    var products = ViewData["Products"] as List<Product> ?? new List<Product>(); // Truyền dữ liệu sản phẩm từ Controller
}

<div class="untree_co-section before-footer-section">
    <div class="container">
        <div class="row mb-5">
            <form class="col-md-12" method="post">
                <div class="site-blocks-table">
                    <table class="table">
                        <thead>
                            <tr>
                                <th class="product-thumbnail">Image</th>
                                <th class="product-name">Product</th>
                                <th class="product-price">Price</th>
                                <th class="product-quantity">Quantity</th>
                                <th class="product-total">Total</th>
                                <th class="product-remove">Remove</th>
                            </tr>
                        </thead>
                        <tbody id="cartItems">
                            <!-- Cart items will be dynamically inserted here -->
                        </tbody>
                    </table>
                </div>
            </form>
        </div>
        <div class="row">
            <div class="col-md-6">
                <a class="btn btn-outline-black btn-sm btn-block" asp-action="Checkout" asp-controller="Cart">Continue Shopping</a>
            </div>
        </div>
        <!-- Tổng tiền -->
        <div class="row mt-4">
            <div class="col-md-6"></div>
            <div class="col-md-6 text-right">
                <h4>Total: <span id="totalAmount">0</span></h4>
            </div>
        </div>
    </div>
</div>

<script>
    // Giỏ hàng từ ViewData (truyền qua Razor)
    var cart = @Html.Raw(Json.Serialize(ViewData["CartItems"]));

    // Dữ liệu sản phẩm từ ViewData
    var products = @Html.Raw(Json.Serialize(ViewData["Products"])); // Sản phẩm và số lượng tồn kho

    var cartItemsContainer = document.getElementById('cartItems');
    var totalAmountElement = document.getElementById('totalAmount');

    // Hàm cập nhật hiển thị giỏ hàng
    function updateCartDisplay() {
        cartItemsContainer.innerHTML = '';
        let totalAmount = 0;

        cart.forEach(function(item) {
            var itemTotal = item.price * item.quantity;
            totalAmount += itemTotal;

            var row = document.createElement('tr');
            row.innerHTML = `
                <td class="product-thumbnail"><img src="/data/products/${item.image}" alt="Image" class="img-fluid"></td>
                <td class="product-name"><h2 class="h5 text-black">${item.name}</h2></td>
                <td>${item.price}</td>
                <td>
                    <div class="input-group mb-3 d-flex align-items-center quantity-container" style="max-width: 120px;">
                        <input type="number" class="form-control text-center quantity-amount" value="${item.quantity}" min="1" id="quantity-${item.id}" onchange="updateQuantityFromInput(${item.id})">
                    </div>
                </td>
                <td>${itemTotal.toFixed(2)}</td>
                <td><button class="btn btn-black btn-sm" onclick="removeFromCart(${item.id})">X</button></td>
            `;
            cartItemsContainer.appendChild(row);
        });

        totalAmountElement.innerText = totalAmount.toFixed(2);
    }

    // Hàm cập nhật số lượng từ input và kiểm tra số lượng tồn kho
    function updateQuantityFromInput(itemId) {
        var newQuantity = document.getElementById(`quantity-${itemId}`).value;

        // Kiểm tra số lượng tồn kho
        var product = products.find(p => p.id === itemId); // Lấy thông tin sản phẩm từ mảng products
        if (product && parseInt(newQuantity) > product.stock) {
            alert('Quantity exceeds available stock!');
            // Cập nhật lại input để số lượng không vượt quá tồn kho
            document.getElementById(`quantity-${itemId}`).value = product.stock;
            newQuantity = product.stock;  // Đặt số lượng mới bằng số lượng tồn kho
        }

        // Cập nhật số lượng trong giỏ hàng
        var item = cart.find(item => item.id === itemId);
        if (item) {
            item.quantity = parseInt(newQuantity);
        }

        // Cập nhật lại giao diện giỏ hàng
        updateCartDisplay();
    }

    // Hàm xóa sản phẩm khỏi giỏ hàng
    function removeFromCart(itemId) {
        // Xóa sản phẩm khỏi giỏ hàng
        cart = cart.filter(item => item.id !== itemId);

        // Cập nhật lại giao diện giỏ hàng
        updateCartDisplay();
    }

    // Hiển thị giỏ hàng lần đầu
    updateCartDisplay();
</script>
